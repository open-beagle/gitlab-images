ARG CI_REGISTRY_IMAGE=
ARG RUBY_VERSION=
ARG GIT_TAG=
ARG GO_TAG=
ARG DOCKER_BUILDTAGS=

ARG UBI_IMAGE=registry.access.redhat.com/ubi8/ubi
ARG GO_IMAGE=${CI_REGISTRY_IMAGE}/gitlab-go:${GO_TAG}
ARG GIT_IMAGE=${CI_REGISTRY_IMAGE}/git-base:${GIT_TAG}
ARG RUBY_IMAGE=${CI_REGISTRY_IMAGE}/gitlab-ruby:${RUBY_VERSION}
ARG BUILD_IMAGE=${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:latest
ARG DOCKER_BUILDTAGS="include_oss include_gcs"

FROM ${GIT_IMAGE} AS git
FROM ${BUILD_IMAGE} AS builder

ARG REGISTRY_VERSION=v2.7.1
ARG REGISTRY_NAMESPACE=gitlab-org
ARG REGISTRY_PROJECT=container-registry
ARG GOPATH=/go

COPY --from=git /usr/local/bin/git* /usr/local/bin/
COPY --from=git /usr/local/share/git-core/ /usr/local/share/git-core/
COPY --from=git /usr/local/libexec/git-core/ /usr/local/libexec/git-core/
COPY --from=golang /usr/local/go/ /usr/local/go/
COPY --from=golang /usr/local/go/bin/go* /usr/local/bin/

RUN GOPATH=${GOPATH} go get gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT} \
    && cd ${GOPATH}/src/gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT} \
    && git checkout ${REGISTRY_VERSION} \
    && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \
    && cp bin/registry /usr/local/bin/registry

FROM ${UBI_IMAGE}

ARG GITLAB_USER=git
ARG GITLAB_DATA=/var/opt/gitlab

ENV LANG=C.UTF-8

RUN adduser -m ${GITLAB_USER} && passwd -d ${GITLAB_USER} \
    && mkdir -p /var/log/gitlab /srv/gitlab/config ${GITLAB_DATA} \
    && chown -R ${GITLAB_USER}:${GITLAB_USER} /var/log/gitlab /srv/gitlab/config ${GITLAB_DATA}

COPY --from=builder /usr/local/bin/registry /usr/local/bin/registry
COPY scripts/ /scripts/

USER ${GITLAB_USER}:${GITLAB_USER}

CMD /scripts/start-registry

HEALTHCHECK --interval=30s --timeout=30s --retries=5 CMD /scripts/healthcheck
