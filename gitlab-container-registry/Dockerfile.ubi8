ARG CI_REGISTRY_IMAGE=
ARG GIT_TAG=
ARG GO_TAG=

ARG UBI_IMAGE=registry.access.redhat.com/ubi8/ubi
ARG GO_IMAGE=${CI_REGISTRY_IMAGE}/gitlab-go:${GO_TAG}
ARG GIT_IMAGE=${CI_REGISTRY_IMAGE}/git-base:${GIT_TAG}
ARG BUILD_IMAGE=${CI_REGISTRY_IMAGE}/gitlab-ubi-builder:latest

FROM ${GIT_IMAGE} AS git
FROM ${GO_IMAGE} AS golang
FROM ${BUILD_IMAGE} AS builder

ARG DOCKER_BUILDTAGS="include_oss include_gcs"
ARG REGISTRY_VERSION=v2.7.1
ARG REGISTRY_NAMESPACE=gitlab-org
ARG REGISTRY_PROJECT=container-registry
ARG GOPATH=/go

COPY --from=git /usr/local/bin/git* /usr/local/bin/
COPY --from=git /usr/local/share/git-core/ /usr/local/share/git-core/
COPY --from=git /usr/local/libexec/git-core/ /usr/local/libexec/git-core/
COPY --from=golang /usr/local/go/ /usr/local/go/
COPY --from=golang /usr/local/go/bin/go* /usr/local/bin/

RUN GOPATH=${GOPATH} go get gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT} \
    && cd ${GOPATH}/src/gitlab.com/${REGISTRY_NAMESPACE}/${REGISTRY_PROJECT} \
    && git checkout ${REGISTRY_VERSION} \
    && CGO_ENABLED=0 BUILDTAGS=${DOCKER_BUILDTAGS} make clean binaries \
    && cp bin/registry /usr/local/bin/registry

FROM ${UBI_IMAGE}

ARG GITLAB_USER=git

RUN adduser -m ${GITLAB_USER} && passwd -d ${GITLAB_USER}

COPY --from=builder /usr/local/bin/registry /bin/registry

USER ${GITLAB_USER}:${GITLAB_USER}

ENV CONFIG_DIRECTORY=/etc/docker/registry
ENV CONFIG_FILENAME=config.yml

CMD /bin/registry serve ${CONFIG_DIRECTORY}/${CONFIG_FILENAME}
